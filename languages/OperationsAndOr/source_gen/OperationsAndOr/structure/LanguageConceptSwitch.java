package OperationsAndOr.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AbstractLogicalOperator = 0;
  public static final int And = 1;
  public static final int Or = 2;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xdb278c21e78c49dbL, 0xa27d645714e23754L);
    builder.put(0x4ec78d081bbde98cL, AbstractLogicalOperator);
    builder.put(0x4ec78d081bbde98bL, And);
    builder.put(0x4ec78d081bbde98dL, Or);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
